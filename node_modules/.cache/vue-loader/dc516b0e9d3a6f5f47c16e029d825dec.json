{"remainingRequest":"/home/kareem/DataForma/dev/shoppinglist/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kareem/DataForma/dev/shoppinglist/src/views/AddForm.vue?vue&type=style&index=0&id=70290d3b&scoped=true&lang=css&","dependencies":[{"path":"/home/kareem/DataForma/dev/shoppinglist/src/views/AddForm.vue","mtime":1623693992739},{"path":"/home/kareem/DataForma/dev/shoppinglist/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kareem/DataForma/dev/shoppinglist/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/kareem/DataForma/dev/shoppinglist/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/kareem/DataForma/dev/shoppinglist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kareem/DataForma/dev/shoppinglist/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZvcm0td3JhcHBlciB7CiAgcGFkZGluZzogMzBweDsKfQouZGV0YWlscyB7CiAgcGFkZGluZy10b3A6IDIwcHg7Cn0KaDQgewogIHBhZGRpbmctYm90dG9tOiAyMHB4OwogIGNvbG9yOiAjNjY5OWNjOwp9CgojcXVhbnRGaWVsZHsKICBtYXgtd2lkdGg6IDUwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGJvcmRlci1yYWRpdXM6IDVweDsKfQojcXVhbnRGaWVsZDpmb2N1c3sKICBib3gtc2hhZG93OiBub25lOwogIGJvcmRlcjogbm9uZTsKfQouaW5wdXQtZ3JvdXAgewogIGNsZWFyOiBib3RoOwogIG1hcmdpbjogMTVweCAwOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLmlucHV0LWdyb3VwIGlucHV0W3R5cGU9J2J1dHRvbiddIHsKICBtaW4td2lkdGg6IDM1cHg7CiAgd2lkdGg6IGF1dG87CiAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2U7Cn0KCmlucHV0W3R5cGU9Im51bWJlciJdIHsKICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsKICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7Cn0KCg=="},{"version":3,"sources":["AddForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AddForm.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"form-wrapper\">\n    <!-- Display item when it is submitted and there is no error in the server request-->\n    <div class=\"text-center\" v-if=\"!this.$store.state.error && submitted\">\n      <h2>Make sure you don't forget anything!</h2>\n      <div class=\"details\">\n        <h4>Item details</h4>\n        <img :src=\"Form.img\" height=\"250\" width=\"250\" style=\"border-radius: 30px;\">\n        <p><strong>Name:</strong> {{Form.name}}</p>\n        <p><strong>quantity:</strong> {{Form.order}}</p>\n      </div>\n      <router-link to=\"/\">\n      <btn class=\"btn btn-success\" >Go to homepage</btn>\n      </router-link>\n    </div>\n    <form v-else>\n      <div class=\"form-group\">\n        <label for=\"name\">Name: <span style=\"color: red;\">*</span></label>\n        <input id=\"name\" class=\"form-control\" required v-model=\"Form.name\" style=\"max-width: 400px;\" v-on:keyup=\"checkAll\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"img\"><span class=\"glyphicon glyphicon-link\"></span> Image URl: </label>\n        <input class=\"form-control\" id=\"img\" label=\"Image url\" v-model=\"Form.img\" style=\"max-width: 400px;\" v-on:keyup=\"checkAll\">\n      </div>\n      <!-- Field for choosing quantity-->\n      <div class=\"form-group\">\n        <label for=\"quant\">Quantity: <span style=\"color: red;\">*</span></label>\n        <div class=\"input-group\" id=\"quant\">\n          <input type=\"button\" value=\"-\" class=\"btn btn-danger\" data-field=\"quantity\" v-on:click=\"decrementQuantity\">\n          <input type=\"text\" step=\"1\" max=\"50\" value=\"1\" name=\"quantity\" id=\"quantField\" v-model=\"Form.order\" v-on:keyup=\"checkAll\">\n          <input type=\"button\" value=\"+\" class=\"btn btn-success\" data-field=\"quantity\" v-on:click=\"incrementQuantity\">\n        </div>\n      </div>\n      <!--<v-slider v-model=\"Form.order\" label=\"Quantity: \" :rules=\"sliderRules\" step=\"1\" :min=\"1\" :max=\"20\" thumb-label=\"always\" ticks></v-slider>-->\n      <br>\n      <btn @click=\"submit\" :disabled=\"!valid\" class=\"btn btn-success\">Submit</btn>\n    </form>\n    <br><br>\n  </div>\n</template>\n\n\n<script>\nimport { mapActions } from 'vuex';\nexport default {\n  props:{\n    activeTab:{\n      type: String,\n    }\n  },\n  name: \"Form\",\n  data: () => {\n    return {\n      //current form values\n      Form:{\n        name: \"\",\n        order: 1,\n        complete: false,\n        img: \"\"\n      },\n      submitted: false,\n      valid: false,\n      loading: false,\n      //check if name is not empty and if it is type name is required\n      nameRules: [\n        (name) => !!name || 'Name is required',\n        (name) => name.length > 2 || 'Name must be longer than 2 characters',\n      ],\n      sliderRules: [\n        v => v <= 10 || \"you can't afford more than 10!\",\n      ],\n\n    };\n  },\n  methods: {\n    //on submit function\n    submit() {\n      let formData = new FormData();\n      Object.keys(this.Form).forEach((key) => {\n        formData.append(key, this.Form[key])\n      });\n      //if the form is submitted will return true, else false.\n      //push the item to the API and to the store\n      this.addToItems(this.Form);\n      //check if the item is submitted\n      this.submitted = true;\n      //if so, call revertCall to set it back to false\n    },\n    ...mapActions([\"addToItems\"]),\n    decrementQuantity(){\n      if(!isNaN(this.Form.order) && this.Form.order > 1 ) {\n        this.Form.order = Number(this.Form.order) - 1;\n      }\n      this.checkAll();\n    },\n    incrementQuantity(){\n      if(!isNaN(this.Form.order)) {\n        this.Form.order = Number(this.Form.order) + 1;\n      }\n      this.checkAll();\n    },\n    checkAll(){\n      if(!isNaN(this.Form.order) && this.Form.order >= 1 && this.Form.name != \"\" && this.Form.name.length >= 3){\n        this.valid = true;\n      }\n      else{\n        this.valid = false;\n      }\n    }\n  },\n  created() {\n    this.activeTab = \"AddItem\";\n  }\n};\n</script>\n\n<style scoped>\n.form-wrapper {\n  padding: 30px;\n}\n.details {\n  padding-top: 20px;\n}\nh4 {\n  padding-bottom: 20px;\n  color: #6699cc;\n}\n\n#quantField{\n  max-width: 50px;\n  text-align: center;\n  border-radius: 5px;\n}\n#quantField:focus{\n  box-shadow: none;\n  border: none;\n}\n.input-group {\n  clear: both;\n  margin: 15px 0;\n  position: relative;\n}\n\n.input-group input[type='button'] {\n  min-width: 35px;\n  width: auto;\n  transition: all 300ms ease;\n}\n\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n  -webkit-appearance: none;\n}\n\n</style>"]}]}