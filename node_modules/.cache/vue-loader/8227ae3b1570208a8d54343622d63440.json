{"remainingRequest":"/home/kareem/DataForma/dev/shoppinglist/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kareem/DataForma/dev/shoppinglist/src/views/AddForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kareem/DataForma/dev/shoppinglist/src/views/AddForm.vue","mtime":1623693992739},{"path":"/home/kareem/DataForma/dev/shoppinglist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kareem/DataForma/dev/shoppinglist/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/kareem/DataForma/dev/shoppinglist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kareem/DataForma/dev/shoppinglist/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOnsKICAgIGFjdGl2ZVRhYjp7CiAgICAgIHR5cGU6IFN0cmluZywKICAgIH0KICB9LAogIG5hbWU6ICJGb3JtIiwKICBkYXRhOiAoKSA9PiB7CiAgICByZXR1cm4gewogICAgICAvL2N1cnJlbnQgZm9ybSB2YWx1ZXMKICAgICAgRm9ybTp7CiAgICAgICAgbmFtZTogIiIsCiAgICAgICAgb3JkZXI6IDEsCiAgICAgICAgY29tcGxldGU6IGZhbHNlLAogICAgICAgIGltZzogIiIKICAgICAgfSwKICAgICAgc3VibWl0dGVkOiBmYWxzZSwKICAgICAgdmFsaWQ6IGZhbHNlLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgLy9jaGVjayBpZiBuYW1lIGlzIG5vdCBlbXB0eSBhbmQgaWYgaXQgaXMgdHlwZSBuYW1lIGlzIHJlcXVpcmVkCiAgICAgIG5hbWVSdWxlczogWwogICAgICAgIChuYW1lKSA9PiAhIW5hbWUgfHwgJ05hbWUgaXMgcmVxdWlyZWQnLAogICAgICAgIChuYW1lKSA9PiBuYW1lLmxlbmd0aCA+IDIgfHwgJ05hbWUgbXVzdCBiZSBsb25nZXIgdGhhbiAyIGNoYXJhY3RlcnMnLAogICAgICBdLAogICAgICBzbGlkZXJSdWxlczogWwogICAgICAgIHYgPT4gdiA8PSAxMCB8fCAieW91IGNhbid0IGFmZm9yZCBtb3JlIHRoYW4gMTAhIiwKICAgICAgXSwKCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy9vbiBzdWJtaXQgZnVuY3Rpb24KICAgIHN1Ym1pdCgpIHsKICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIE9iamVjdC5rZXlzKHRoaXMuRm9ybSkuZm9yRWFjaCgoa2V5KSA9PiB7CiAgICAgICAgZm9ybURhdGEuYXBwZW5kKGtleSwgdGhpcy5Gb3JtW2tleV0pCiAgICAgIH0pOwogICAgICAvL2lmIHRoZSBmb3JtIGlzIHN1Ym1pdHRlZCB3aWxsIHJldHVybiB0cnVlLCBlbHNlIGZhbHNlLgogICAgICAvL3B1c2ggdGhlIGl0ZW0gdG8gdGhlIEFQSSBhbmQgdG8gdGhlIHN0b3JlCiAgICAgIHRoaXMuYWRkVG9JdGVtcyh0aGlzLkZvcm0pOwogICAgICAvL2NoZWNrIGlmIHRoZSBpdGVtIGlzIHN1Ym1pdHRlZAogICAgICB0aGlzLnN1Ym1pdHRlZCA9IHRydWU7CiAgICAgIC8vaWYgc28sIGNhbGwgcmV2ZXJ0Q2FsbCB0byBzZXQgaXQgYmFjayB0byBmYWxzZQogICAgfSwKICAgIC4uLm1hcEFjdGlvbnMoWyJhZGRUb0l0ZW1zIl0pLAogICAgZGVjcmVtZW50UXVhbnRpdHkoKXsKICAgICAgaWYoIWlzTmFOKHRoaXMuRm9ybS5vcmRlcikgJiYgdGhpcy5Gb3JtLm9yZGVyID4gMSApIHsKICAgICAgICB0aGlzLkZvcm0ub3JkZXIgPSBOdW1iZXIodGhpcy5Gb3JtLm9yZGVyKSAtIDE7CiAgICAgIH0KICAgICAgdGhpcy5jaGVja0FsbCgpOwogICAgfSwKICAgIGluY3JlbWVudFF1YW50aXR5KCl7CiAgICAgIGlmKCFpc05hTih0aGlzLkZvcm0ub3JkZXIpKSB7CiAgICAgICAgdGhpcy5Gb3JtLm9yZGVyID0gTnVtYmVyKHRoaXMuRm9ybS5vcmRlcikgKyAxOwogICAgICB9CiAgICAgIHRoaXMuY2hlY2tBbGwoKTsKICAgIH0sCiAgICBjaGVja0FsbCgpewogICAgICBpZighaXNOYU4odGhpcy5Gb3JtLm9yZGVyKSAmJiB0aGlzLkZvcm0ub3JkZXIgPj0gMSAmJiB0aGlzLkZvcm0ubmFtZSAhPSAiIiAmJiB0aGlzLkZvcm0ubmFtZS5sZW5ndGggPj0gMyl7CiAgICAgICAgdGhpcy52YWxpZCA9IHRydWU7CiAgICAgIH0KICAgICAgZWxzZXsKICAgICAgICB0aGlzLnZhbGlkID0gZmFsc2U7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmFjdGl2ZVRhYiA9ICJBZGRJdGVtIjsKICB9Cn07Cg=="},{"version":3,"sources":["AddForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddForm.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"form-wrapper\">\n    <!-- Display item when it is submitted and there is no error in the server request-->\n    <div class=\"text-center\" v-if=\"!this.$store.state.error && submitted\">\n      <h2>Make sure you don't forget anything!</h2>\n      <div class=\"details\">\n        <h4>Item details</h4>\n        <img :src=\"Form.img\" height=\"250\" width=\"250\" style=\"border-radius: 30px;\">\n        <p><strong>Name:</strong> {{Form.name}}</p>\n        <p><strong>quantity:</strong> {{Form.order}}</p>\n      </div>\n      <router-link to=\"/\">\n      <btn class=\"btn btn-success\" >Go to homepage</btn>\n      </router-link>\n    </div>\n    <form v-else>\n      <div class=\"form-group\">\n        <label for=\"name\">Name: <span style=\"color: red;\">*</span></label>\n        <input id=\"name\" class=\"form-control\" required v-model=\"Form.name\" style=\"max-width: 400px;\" v-on:keyup=\"checkAll\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"img\"><span class=\"glyphicon glyphicon-link\"></span> Image URl: </label>\n        <input class=\"form-control\" id=\"img\" label=\"Image url\" v-model=\"Form.img\" style=\"max-width: 400px;\" v-on:keyup=\"checkAll\">\n      </div>\n      <!-- Field for choosing quantity-->\n      <div class=\"form-group\">\n        <label for=\"quant\">Quantity: <span style=\"color: red;\">*</span></label>\n        <div class=\"input-group\" id=\"quant\">\n          <input type=\"button\" value=\"-\" class=\"btn btn-danger\" data-field=\"quantity\" v-on:click=\"decrementQuantity\">\n          <input type=\"text\" step=\"1\" max=\"50\" value=\"1\" name=\"quantity\" id=\"quantField\" v-model=\"Form.order\" v-on:keyup=\"checkAll\">\n          <input type=\"button\" value=\"+\" class=\"btn btn-success\" data-field=\"quantity\" v-on:click=\"incrementQuantity\">\n        </div>\n      </div>\n      <!--<v-slider v-model=\"Form.order\" label=\"Quantity: \" :rules=\"sliderRules\" step=\"1\" :min=\"1\" :max=\"20\" thumb-label=\"always\" ticks></v-slider>-->\n      <br>\n      <btn @click=\"submit\" :disabled=\"!valid\" class=\"btn btn-success\">Submit</btn>\n    </form>\n    <br><br>\n  </div>\n</template>\n\n\n<script>\nimport { mapActions } from 'vuex';\nexport default {\n  props:{\n    activeTab:{\n      type: String,\n    }\n  },\n  name: \"Form\",\n  data: () => {\n    return {\n      //current form values\n      Form:{\n        name: \"\",\n        order: 1,\n        complete: false,\n        img: \"\"\n      },\n      submitted: false,\n      valid: false,\n      loading: false,\n      //check if name is not empty and if it is type name is required\n      nameRules: [\n        (name) => !!name || 'Name is required',\n        (name) => name.length > 2 || 'Name must be longer than 2 characters',\n      ],\n      sliderRules: [\n        v => v <= 10 || \"you can't afford more than 10!\",\n      ],\n\n    };\n  },\n  methods: {\n    //on submit function\n    submit() {\n      let formData = new FormData();\n      Object.keys(this.Form).forEach((key) => {\n        formData.append(key, this.Form[key])\n      });\n      //if the form is submitted will return true, else false.\n      //push the item to the API and to the store\n      this.addToItems(this.Form);\n      //check if the item is submitted\n      this.submitted = true;\n      //if so, call revertCall to set it back to false\n    },\n    ...mapActions([\"addToItems\"]),\n    decrementQuantity(){\n      if(!isNaN(this.Form.order) && this.Form.order > 1 ) {\n        this.Form.order = Number(this.Form.order) - 1;\n      }\n      this.checkAll();\n    },\n    incrementQuantity(){\n      if(!isNaN(this.Form.order)) {\n        this.Form.order = Number(this.Form.order) + 1;\n      }\n      this.checkAll();\n    },\n    checkAll(){\n      if(!isNaN(this.Form.order) && this.Form.order >= 1 && this.Form.name != \"\" && this.Form.name.length >= 3){\n        this.valid = true;\n      }\n      else{\n        this.valid = false;\n      }\n    }\n  },\n  created() {\n    this.activeTab = \"AddItem\";\n  }\n};\n</script>\n\n<style scoped>\n.form-wrapper {\n  padding: 30px;\n}\n.details {\n  padding-top: 20px;\n}\nh4 {\n  padding-bottom: 20px;\n  color: #6699cc;\n}\n\n#quantField{\n  max-width: 50px;\n  text-align: center;\n  border-radius: 5px;\n}\n#quantField:focus{\n  box-shadow: none;\n  border: none;\n}\n.input-group {\n  clear: both;\n  margin: 15px 0;\n  position: relative;\n}\n\n.input-group input[type='button'] {\n  min-width: 35px;\n  width: auto;\n  transition: all 300ms ease;\n}\n\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n  -webkit-appearance: none;\n}\n\n</style>"]}]}